import{ah as _,t as D,a7 as L}from"./index.b7c3ad49.js";import{b,d as h,g as F,f as R,c as x,u as d,q as j,w as A,h as C,i as N,e as M}from"./firebase.b163514c.js";import{u as W}from"./auth.3820e33c.js";function E(){if(window.getSelection!==void 0){const e=window.getSelection();e.empty!==void 0?e.empty():e.removeAllRanges!==void 0&&(e.removeAllRanges(),_.is.mobile!==!0&&e.addRange(document.createRange()))}else document.selection!==void 0&&document.selection.empty()}let i=[],f=[];function q(e){f=f.filter(t=>t!==e)}function G(e){q(e),f.push(e)}function H(e){q(e),f.length===0&&i.length!==0&&(i[i.length-1](),i=[])}function J(e){f.length===0?e():i.push(e)}function K(e){i=i.filter(t=>t!==e)}var Q=(e,t)=>{const u=e.__vccOpts||e;for(const[l,m]of t)u[l]=m;return u};const S=D(null);function U(){const{user:e}=W();return S.value=e.value,{currentUser:S}}function V(e){var y;const t=L({loading:!0,name:"",users:[],latestMessage:{text:"",timestamp:b()}}),u=D([]),{currentUser:l}=U(),m=h(x,e),p=F(m),g=h(R,(y=l.value)==null?void 0:y.uid),v=F(g),T=async()=>{if(!l.value)return;const o=await p,s=await v;if(o.exists()&&s.exists())try{const a=o.data().users||[];await d(m,{users:a.filter(r=>{var c;return r!==((c=l.value)==null?void 0:c.uid)})});const n=s.data().rooms||[];await d(g,{rooms:n.filter(r=>r!==e)})}catch(a){console.error("Failed to leave room:",a)}},w=async()=>{const o=await p;if(o.exists()){const s=o.data();if(t.name=s==null?void 0:s.name,t.users=s==null?void 0:s.users,t.latestMessage.text=s==null?void 0:s.latestMessageText,t.latestMessage.timestamp=s==null?void 0:s.latestMessageTimestamp,t.users.length>0){const a=j(R,A(C(),"in",t.users)),n=await N(a);u.value=n.docs.map(r=>{const c=r.data();return{id:r.id,displayName:c.displayName,photoURL:c.photoURL,rooms:c.rooms}})}t.loading=!1}else console.error("Document doesn't exist!"),t.loading=!1};return{room:t,chatUsers:u,fetchRoomData:w,updateLatestMessage:async(o,s)=>{try{await d(h(x,o),{latestMessageText:s.text,latestMessageTimestamp:s.timestamp})}catch(a){console.error("Failed to update latest message:",a)}},joinRoom:async()=>{const{currentUser:o}=U();if(!o.value)return;const s=await p,a=await v;try{if(!s.exists())return;const n=s.data(),r=a.data();(!n.users.includes(o.value.uid)||!r.rooms.includes(e))&&(await d(m,{users:M(o.value.uid)}),await d(g,{rooms:M(e)}),await w())}catch(n){console.error("Failed to join room:",n)}},leaveRoom:T}}export{Q as _,J as a,U as b,E as c,H as d,G as e,K as r,V as u};
